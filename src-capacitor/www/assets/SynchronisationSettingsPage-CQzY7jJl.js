import{N as g}from"./NavigationPage-LIxkm1Lv.js";import{h as b,l as I,d as p,ao as N,s as v,K as h,I as P,m as x,ap as z,M as A,T as C,z as M,o as s,e as a,N as T,F as i,E as m}from"./index-BLR50dHh.js";import{b as k}from"./config-menu-builder-Cb9crtwj.js";const w=b({__name:"SynchronisationSettingsPage",setup(u,{expose:r}){r();const n=I(),e=p(()=>l.platform.is.mobile&&t.synchronization.type==="filesystem"),o=N(),{config:t}=v(),d=[{label:"force sync",disabled:p(()=>n.user?.isAnonymous||t.synchronization.type==="none"),handler:()=>o.forceResync(),color:h("blue")}],f=k(t.synchronization,{configScheme:z,excludeKeys:["path"]}),{orgNoteApi:c}=P(),S=[{label:"path",reactivePath:t.synchronization,reactiveKey:"path",type:"readonly"},{label:"select dir",type:"action",color:h("blue"),handler:async()=>{const _=await c.fileSystem.readPath();t.synchronization.path=_}}],l=x(),y={authStore:n,dirSyncAvailable:e,syncStore:o,config:t,forceSyncItems:d,syncTypeItems:f,orgNoteApi:c,pathPickItems:S,$q:l,NavigationPage:g,MenuGroup:A,TheDescription:C};return Object.defineProperty(y,"__isScriptSetup",{enumerable:!1,value:!0}),y}});function G(u,r,n,e,o,t){return s(),a(e.NavigationPage,null,{default:T(()=>[i(e.MenuGroup,{title:"synchronization type",items:e.syncTypeItems},null,8,["items"]),e.dirSyncAvailable?(s(),a(e.MenuGroup,{key:0,title:"vault path",items:e.pathPickItems})):m("",!0),e.config.synchronization.type==="filesystem"?(s(),a(e.TheDescription,{key:1,text:"this functionality in development right now. It's not possible to sync notes with the filesystem yet."})):m("",!0),i(e.MenuGroup,{items:e.forceSyncItems}),i(e.TheDescription,{text:"this functionality will completely clear the local cache and reload all notes from an external source. Important: Unsaved notes will be deleted."})]),_:1})}const K=M(w,[["render",G],["__file","SynchronisationSettingsPage.vue"]]);export{K as default};
