name: CI/CD orgnote client

on: [push, pull_request]

env:
  API_URL: ${{ vars.API_URL }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: |
          bun install --frozen-lockfile
          bun add global @quasar/cli
      - name: Build
        run: bun run build

  lint:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install Node.js dependencies
        run: bun install --frozen-lockfile

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          eslint: true

  code-quality:
    name: Check code quality
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install Node.js dependencies
        run: bun install --frozen-lockfile

      - name: Run duplicates check
        run: bun run report:duplicates

  tests:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install Node.js dependencies
        run: bun install --frozen-lockfile

      - name: Run tests
        run: bun test

  release:
    name: Create release
    needs: [build, lint, tests, code-quality]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Release
        uses: justincy/github-action-npm-release@2.0.2
        id: release
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: Print release output
        if: ${{ steps.release.outputs.released == 'true' }}
        run: echo Release ID ${{ steps.release.outputs.release_id }}
