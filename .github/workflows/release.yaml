on:
  release:
    types: [created, published]

jobs:
  release:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: |
          bun install --frozen-lockfile
          bun add global @quasar/cli
          npm install -g cordova
          npm install -g @quasar/cli
      - name: Build
        run: bun run build:android
      - name: Download bundletool
        run: |
          curl -LJ -o bundletool.jar https://github.com/google/bundletool/releases/download/1.15.1/bundletool-all-1.15.1.jar
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '11'
      - name: Build android apk release
        run: |
          version=${{ github.event.release.tag_name }}
          mkdir -p ./dist/build
          echo ${{ secrets.KEYSTORE }} | base64 -d > org-note-release.keystore
          java -jar bundletool.jar build-apks \
              --mode=universal \
              --bundle=./dist/cordova/android/bundle/release/app-release.aab \
              --output=./dist/pwa/builds/orgnote.apks \
              --ks=./org-note-release.keystore \
              --ks-pass=pass:${{ secrets.STOREPASS }} \
              --ks-key-alias=sb
          unzip -p ./dist/pwa/builds/orgnote.apks universal.apk > ./dist/pwa/builds/orgnote-$version.apk
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/pwa/builds/orgnote-{{ github.event.release.tag_name }}.apk
          asset_name: AssetName
          asset_content_type: application/octet-stream
