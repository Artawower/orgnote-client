@mixin flexify($direction: row, $justify: space-between, $align: center, $gap: 0px) {
  & {
    display: flex !important;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
    gap: $gap;
  }
}

@mixin flexify-inline($direction: row, $justify: space-between, $align: center) {
  & {
    display: inline-flex !important;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
  }
}

@mixin dark-mode {
  body.body--dark {
    @content;
  }
}

@mixin light-mode {
  body.body--light {
    @content;
  }
}

@mixin mobile {
  @media (max-width: calc($tablet - 1px)) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: $desktop) {
    @content;
  }
}

@mixin electron {
  body.electron {
    @content;
  }
}

@mixin tablet {
  @media (min-width: $mobile) and (max-width: calc($desktop - 1px)) {
    @content;
  }
}

@mixin tablet-above {
  @media (min-width: $desktop) {
    @content;
  }
}

@mixin desktop-below {
  @media (max-width: calc($desktop - 1px)) {
    @content;
  }
}

@mixin tablet-below {
  @media (max-width: calc($desktop - 1px)) {
    @content;
  }
}

@mixin line-limit($lines) {
  & {
    overflow: hidden;
    display: -webkit-box !important;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
  }
}

@mixin reset-input {
  & {
    background: transparent;
    border: 0;
  }

  &:focus {
    outline: none;
  }

  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  &[type='number'] {
    -moz-appearance: textfield;
  }
}

@mixin sticky-header {
  & {
    position: sticky;
    top: -1px;
    z-index: 1000;
  }
}

@mixin mobile-footer-padding($offset: 0px) {
  @include desktop-below {
    padding-bottom: calc(var(--footer-height) + #{$offset});
  }
}

@mixin fit {
  & {
    height: 100%;
    width: 100%;
  }
}

@mixin overscreen($z-index: 2) {
  & {
    position: absolute;
    top: 0;
    left: 0;
    z-index: $z-index;
  }
}

$type-colors: (
  info: var(--blue),
  warning: var(--yellow),
  danger: var(--red),
);

@mixin for-each-view-type {
  @each $type, $color in $type-colors {
    @content ($type, $color);
  }
}
